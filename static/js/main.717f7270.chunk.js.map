{"version":3,"sources":["FeedbackOptions/FeedbackOptions.module.css","FeedbackOptions/FeedbackOptions.js","section/section.js","Statistic/statistic.js","Notification/notification.js","App.js","index.js","section/section.module.css","Statistic/statistic.module.css"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","good","neutral","bad","type","onClick","name","value","className","styles","btn","Selection","PropTypes","title","string","isRequired","children","element","Section","Styles","Statistics","total","positivePercentage","statistic","Notification","message","App","state","handleChange","e","target","setState","prevState","countTotal","countPositivePercentage","PositivePercentage","toFixed","Number","this","Component","ReactDOM","render","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,IAAM,+B,yLC+CTC,EA5CS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC1BC,EAAuBF,EAAvBE,KAAMC,EAAiBH,EAAjBG,QAASC,EAAQJ,EAARI,IACvB,OACE,oCACE,4BACEC,KAAK,SACLC,QAASL,EACTM,KAAK,OACLC,MAAON,EACPO,UAAWC,IAAOC,KALpB,QASA,4BACEN,KAAK,SACLC,QAASL,EACTM,KAAK,UACLC,MAAOL,EACPM,UAAWC,IAAOC,KALpB,WASA,4BACEN,KAAK,SACLC,QAASL,EACTM,KAAK,MACLC,MAAOJ,EACPK,UAAWC,IAAOC,KALpB,S,gCCbNC,UAAUC,UAAY,CACpBC,MAAOD,IAAUE,OAAOC,WACxBC,SAAUJ,IAAUK,QAAQF,YAGfG,MAdC,SAAC,GAAyB,IAAvBL,EAAsB,EAAtBA,MAAOG,EAAe,EAAfA,SACxB,OACE,oCACE,wBAAIR,UAAWW,IAAON,OAAQA,GAC7BG,I,gBCgBQI,MApBf,YAAwE,IAAlDnB,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKkB,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,yBAAKd,UAAWC,IAAOc,WACrB,uCAAatB,GACb,0CAAgBC,GAChB,sCAAYC,GACZ,wCAAckB,GACd,oDAA0BC,KCAjBE,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAKA,ICEOC,E,4MACnBC,MAAQ,CACN1B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPyB,aAAe,SAACC,GAAO,IACbvB,EAASuB,EAAEC,OAAXxB,KACR,EAAKyB,UAAS,SAACC,GAAD,sBACX1B,EAAO0B,EAAU1B,GAAQ,O,EAG9B2B,WAAa,WAAO,IAAD,EACc,EAAKN,MAEpC,OAHiB,EACT1B,KADS,EACHC,QADG,EACMC,K,EAIzB+B,wBAA0B,WAAO,IAEzBC,GADW,EAAKR,MAAd1B,KAC4B,EAAKgC,aAAgB,KAAKG,UAC9D,OAAOC,OAAOF,I,uDAEN,IAAD,EACwBG,KAAKX,MAA5B1B,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,oCACE,kBAAC,EAAD,CAASU,MAAM,yBACb,kBAAC,EAAD,CACEd,QAASuC,KAAKX,MACd3B,gBAAiBsC,KAAKV,gBAG1B,kBAAC,EAAD,CAASf,MAAM,aACZyB,KAAKL,aAAe,EACnB,kBAAC,EAAD,CACEhC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLkB,MAAOiB,KAAKL,aACZX,mBAAoBgB,KAAKJ,0BAA4B,MAGvD,kBAAC,EAAD,CAAcT,QAAQ,4B,GA3CDc,a,MCDjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCJjD/C,EAAOC,QAAU,CAAC,MAAQ,yB,kBCA1BD,EAAOC,QAAU,CAAC,UAAY,gC","file":"static/js/main.717f7270.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__3Yl1_\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  const { good, neutral, bad } = options;\r\n  return (\r\n    <>\r\n      <button\r\n        type=\"button\"\r\n        onClick={onLeaveFeedback}\r\n        name=\"good\"\r\n        value={good}\r\n        className={styles.btn}\r\n      >\r\n        Good\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={onLeaveFeedback}\r\n        name=\"neutral\"\r\n        value={neutral}\r\n        className={styles.btn}\r\n      >\r\n        Neutral\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={onLeaveFeedback}\r\n        name=\"bad\"\r\n        value={bad}\r\n        className={styles.btn}\r\n      >\r\n        Bad\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.shape({\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n  }).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Styles from \"./section.module.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h3 className={Styles.title}>{title}</h3>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSelection.PropTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./statistic.module.css\";\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <div className={styles.statistic}>\r\n      <span>Good: {good}</span>\r\n      <span>Neutral: {neutral}</span>\r\n      <span>Bad: {bad}</span>\r\n      <span>Total: {total}</span>\r\n      <span>Positive feedpack: {positivePercentage}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <h4>{message}</h4>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport Section from \"./section/section\";\nimport Statistics from \"./Statistic/statistic\";\nimport Notification from \"./Notification/notification\";\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleChange = (e) => {\n    const { name } = e.target;\n    this.setState((prevState) => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n  countTotal = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  };\n  countPositivePercentage = () => {\n    const { good } = this.state;\n    const PositivePercentage = ((good / this.countTotal()) * 100).toFixed();\n    return Number(PositivePercentage);\n  };\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.handleChange}\n          />\n        </Section>\n        <Section title=\"Statistic\">\n          {this.countTotal() > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotal()}\n              positivePercentage={this.countPositivePercentage() + \"%\"}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./style.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"section_title__2ksH_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistic\":\"statistic_statistic__3vfXG\"};"],"sourceRoot":""}